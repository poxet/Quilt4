@using System.Text.RegularExpressions
@using Quilt4.Web.Models
@model IssueTypeModel

@helper FormatStackTrace(string rawStackTrace)
{
    //Break lines
    
    //TODO: Split on string
    //TODO: Make code that is not yours, gray
    //TODO: Color function, file names and line numbers with different coulor.

    var lines = Regex.Matches(rawStackTrace, Environment.NewLine);
    //var lines = rawStackTrace.Split(Environment.NewLine);
    
    //var stackTrace = rawStackTrace.Replace(Environment.NewLine + "   at ", "<br/> at ");
    //stackTrace = stackTrace.Replace(") in ", ")<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in ");
    //stackTrace = stackTrace.Replace(":line ", "<strong>:line </strong>");

    var output = "";
    foreach (var line in lines)
    {
        output += line + "</br>";
    }
    Html.Raw(output);
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Initiative", "Index", "Initiative")</li>
    <li>@Html.ActionLink(Model.InitiativeName ?? Constants.DefaultInitiativeName, "Details", "Initiative", new { id = Model.InitiativeUniqueIdentifier }, null)</li>
    <li>@Html.ActionLink(Model.ApplicationName, "Details", "Application", new { id = Model.InitiativeUniqueIdentifier, application = Model.ApplicationName }, null)</li>
    <li>@Html.ActionLink(Model.Version, "Details", "Version", new { id = Model.InitiativeUniqueIdentifier, application = Model.ApplicationName, version = Model.VersionUniqueIdentifier }, null)</li>
    <li class="active">@Model.IssueType.ExceptionTypeName</li>
</ol>

<h2>Issuetype Details</h2>

<table>
    <tr>
        <th>Stack trace</th>
    </tr>
    <tr>
        <td>@FormatStackTrace(Model.IssueType.StackTrace)</td>
    </tr>
</table>

@Html.Partial("_EnvironmentLegendPartial", Model.Environments)

<h3>Issues</h3>
<table>
    <tr style="border-bottom-color: black; border-bottom-style: solid;">
        <th style="padding: 0 5px;">Time</th>
        <th style="padding: 0 5px;">Threads</th>
        <th style="padding: 0 5px;">User</th>
        <th style="padding: 0 5px;">Handle</th>
        <th style="padding: 0 5px;">Visible</th>
        <th style="padding: 0 5px;">Environment</th>
        <th style="padding: 0 5px;">Ticket</th>
    </tr>
    @foreach (var issue in Model.IssueType.Issues)
    {
        <tr style="display: table-row;">
            <td style="padding: 0 5px;" data-toggle="tooltip" data-placement="bottom" title="@issue.ServerTime.ToLocalTime()">@issue.ServerTime.ToLocalTime().ToTimeAgo() ago</td>
            <td style="padding: 0 5px;" title="@issue.IssueThreadGuid">
                @if (Model.IssueType.Issues.Count(x => x.IssueThreadGuid == issue.IssueThreadGuid) > 1)
                {
                    @Html.ActionLink(@Model.IssueType.Issues.Count(x => x.IssueThreadGuid == issue.IssueThreadGuid).ToString(), "Thread", "IssueType", new { id = Model.InitiativeUniqueIdentifier, issueThread = issue.IssueThreadGuid }, null)
                }
                else
                {
                    @Model.IssueType.Issues.Count(x => x.IssueThreadGuid == issue.IssueThreadGuid)
                }

            </td>
            <td style="padding: 0 5px;">@(Model.Users.First(x => x.Id == Model.Sessions.First(y => y.Id == issue.SessionId).UserFingerprint).UserName == null ? Html.Raw("N/A") : Html.Raw(Model.Users.First(x => x.Id == Model.Sessions.First(y => y.Id == issue.SessionId).UserFingerprint).UserName))</td>
            <td style="padding: 0 5px;">@(issue.UserHandle == null ? Html.Raw("N/A") : Html.Raw(issue.UserHandle))</td>
            <td style="padding: 0 5px;">@((issue.VisibleToUser == null || issue.VisibleToUser == false) ? "No" : "Yes")</td>
            <td style="padding: 0 5px;">
                @foreach (var env in Model.Sessions.Where(x => x.Id == issue.SessionId).Select(x => x.Environment))
                {
                    foreach (var environment in Model.Environments)
                    {
                        if (env.Equals(environment.Name))
                        {
                            <span class="@Html.Raw(environment.Name + "Color")" style="background-color: #@environment.Color; width: 20px; height: 20px; display: inline-block; border: 1px solid #000000;" data-toggle="tooltip" data-placement="bottom" title="@environment.Name"></span>
                        }
                    }
                }
            </td>
            <td style="padding: 0 5px;">@issue.Ticket</td>
        </tr>
    }
</table>