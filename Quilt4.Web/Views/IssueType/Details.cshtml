@using Quilt4.Web.Models
@model IssueTypeModel

@{
    ViewBag.Title = "Issuetype Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Initiative", "Index", "Initiative")</li>
    <li>@Html.ActionLink(Model.InitiativeName ?? Constants.DefaultInitiativeName, "Details", "Initiative", new { initiativeUniqueIdentifier = Model.InitiativeUniqueIdentifier }, null)</li>
    <li>@Html.ActionLink(Model.ApplicationName, "Details", "Application", new { initiativeUniqueIdentifier = Model.InitiativeUniqueIdentifier, application = Model.ApplicationName }, null)</li>
    <li>@Html.ActionLink(Model.Version, "Details", "Version", new { initiativeUniqueIdentifier = Model.InitiativeUniqueIdentifier, application = Model.ApplicationName, version = Model.VersionUniqueIdentifier }, null)</li>
    <li class="active">@Model.IssueType.ExceptionTypeName</li>
</ol>

<h2>Issuetype Details</h2>

<h3>Issues</h3>
<table>
    <tr style="border-bottom-color: black; border-bottom-style: solid;">
        <th style="padding: 0 5px;">Time</th>
        <th style="padding: 0 5px;">Threads</th>
        <th style="padding: 0 5px;">User</th>
        <th style="padding: 0 5px;">Handle</th>
        <th style="padding: 0 5px;">Visible</th>
        <th style="padding: 0 5px;">Environment</th>
        <th style="padding: 0 5px;">Ticket</th>
    </tr>
    @foreach (var issue in Model.IssueType.Issues)
    {
        <tr>
            <td style="padding: 0 5px;" data-toggle="tooltip" data-placement="bottom" title="@issue.ServerTime.ToLocalTime()">@issue.ServerTime.ToLocalTime().ToTimeAgo() ago</td>
            <td style="padding: 0 5px;">
                @if (Model.IssueType.Issues.Count(x => x.IssueThreadGuid == issue.IssueThreadGuid) > 1)
                {
                    @Html.ActionLink(@Model.IssueType.Issues.Count(x => x.IssueThreadGuid == issue.IssueThreadGuid).ToString(), "Thread", "IssueType", new { initiativeUniqueIdentifier = Model.InitiativeUniqueIdentifier, issueThread = issue.IssueThreadGuid }, null)
                }
                else
                {
                    @Model.IssueType.Issues.Count(x => x.IssueThreadGuid == issue.IssueThreadGuid)
                }

            </td>
            <td style="padding: 0 5px;">@(Model.Users.First(x => x.Id == Model.Sessions.First(y => y.Id == issue.SessionId).UserFingerprint).UserName == null ? Html.Raw("N/A") : Html.Raw(Model.Users.First(x => x.Id == Model.Sessions.First(y => y.Id == issue.SessionId).UserFingerprint).UserName))</td>
            <td style="padding: 0 5px;">@(issue.UserHandle == null ? Html.Raw("N/A") : Html.Raw(issue.UserHandle))</td>
            <td style="padding: 0 5px;">@((issue.VisibleToUser == null || issue.VisibleToUser == false) ? "No" : "Yes")</td>
            <td style="padding: 0 5px;">@foreach (var env in Model.Sessions.Where(x => x.Id == issue.SessionId).Select(x => x.Environment))
                                        {
                                            @Html.Raw(env + ", ")
                                        }  </td>
            <td style="padding: 0 5px;">@issue.Ticket</td>
        </tr>
    }
</table>